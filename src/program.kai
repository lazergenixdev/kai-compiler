
Compile_Options :: struct {
    Interpreter_Max_Step_Count : u32; // default = 1000000
    Interpreter_Max_Call_Depth : u32; // default = 1024
}

Native_Procedure :: struct {
    name        : *u8;
    address     : *void;
    input_count : u8; // TODO: more than this for typechecking
}

Program_Create_Info :: struct {
    source_code       : string;
    allocator         : Allocator;
    error             : *Error;
    native_procedures : [] Native_Procedure;
	options           : Compile_Options;
}

Program :: struct {
    code            : [] u8;
    procedure_table : uint;
    allocator       : Allocator;
}

// TODO: use tagged union instead of specialized functions
create_program :: (info: Program_Create_Info, out_program: *Program) -> Result
{
    info->void;
    out_program->void;
    ret 0;
}

destroy_program :: (program: *Program)
{
    program->void;
}

find_procedure :: (program: *Program, name: string, opt_type: Type)
{
    program->void;
    name->void;
    opt_type->void;
}

