
// Basic Types
#export value1 : s32 = 123;
#export value2 : f64 = 3.125;
#export value3 : string = "wow";


// Struct Types
Person :: struct {
    name   : string;
    age    : u32;
    height : u32;
}
#export you: Person; // default zero initialization


// Enum Types
Result :: enum s16 {
    Failed  :: 1;
    Success :: 0;
}


// Procedures
ceil_div_fast :: (num: u64, exp: u32) -> u64
{
    ret (num + (1 << exp) - 1) >> exp;
}


// More Literals
#export l1 :: 100_000;     // can use any number of '_' for readability (does not affect the value)
#export l2 :: 0b01011;     // Binary (base 2)
#export l3 :: 0xFE;        // Hexidecimal (base 16)
//#export l5 :: 1.23e-5;     // Can use exp notation (reads as 1.23 times 10 to the power -5)
#export l7 :: #char "ì „";   // Single character (Unicode codepoint value)
#export l8 :: #multi "->"; // Multi character
